OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:24:42.962+02:00' ],		#prior : OmReference [ 'Pharo10-SNAPSHOT-64bit-28169ae.82ndx98mf3wycsx1ktpwwzo48', '12' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #increment,			#protocol : #accessing,			#sourceCode : 'increment\r\r|c | \rc := Counter new.\rcount := count + 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:24',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:24:56.117+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrecrement,			#protocol : #accessing,			#sourceCode : 'decrecrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:24',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:25:20.499+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : 'SebastianLorenzano 4/1/2025 11:25',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:26:06.626+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : 'SebastianLorenzano 4/1/2025 11:25',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 2.\rc increment ; increment.\rself assert: c count equals: 4',			#stamp : 'SebastianLorenzano 4/1/2025 11:26',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:26:23.493+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsDecremented,			#protocol : #tests,			#sourceCode : 'testCountIsDecremented\r\r| c | \rc := Counter new.\rc count: 2.\rc decrement ; decrement.\rself assert: c count equals: 0',			#stamp : 'SebastianLorenzano 4/1/2025 11:26',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:26:38.132+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrement,			#protocol : #accessing,			#sourceCode : 'decrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:26',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:26:41.899+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrecrement,			#protocol : #accessing,			#sourceCode : 'decrecrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:24',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrecrement,			#protocol : #'as yet unclassified',			#sourceCode : 'decrecrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:24',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:26:41.924+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrecrement,			#protocol : #accessing,			#sourceCode : 'decrecrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : 'SebastianLorenzano 4/1/2025 11:24',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.68+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #increment,			#protocol : #accessing,			#sourceCode : 'increment\r\r|c | \rc := Counter new.\rcount := count + 1\r',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #increment,			#protocol : #'as yet unclassified',			#sourceCode : 'increment\r\r|c | \rc := Counter new.\rcount := count + 1\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.705+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #increment,			#protocol : #accessing,			#sourceCode : 'increment\r\r|c | \rc := Counter new.\rcount := count + 1\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.707+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrement,			#protocol : #accessing,			#sourceCode : 'decrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrement,			#protocol : #'as yet unclassified',			#sourceCode : 'decrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.717+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrement,			#protocol : #accessing,			#sourceCode : 'decrement\r\r|c | \rc := Counter new.\rcount := count - 1\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.717+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: anInteger\r"Sets count internal variable" \r\tcount := anInteger\r',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #'as yet unclassified',			#sourceCode : 'count: anInteger\r"Sets count internal variable" \r\tcount := anInteger\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.726+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: anInteger\r"Sets count internal variable" \r\tcount := anInteger\r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.727+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #'as yet unclassified',			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.735+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.735+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'count\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyCounter\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Counter,						#isMetaSide : false					},					#name : #count,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Counter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Counter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.737+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'count\'\r\tclassVariableNames: \'\'\r\tpackage: #MyCounter',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCounter,						#isMetaSide : false					},					#name : #count,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteCounter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteCounter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.744+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.754+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.76+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 2.\rc increment ; increment.\rself assert: c count equals: 4',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 2.\rc increment ; increment.\rself assert: c count equals: 4',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.77+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c | \rc := Counter new.\rc count: 2.\rc increment ; increment.\rself assert: c count equals: 4',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.77+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsDecremented,			#protocol : #tests,			#sourceCode : 'testCountIsDecremented\r\r| c | \rc := Counter new.\rc count: 2.\rc decrement ; decrement.\rself assert: c count equals: 0',			#stamp : '',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsDecremented,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsDecremented\r\r| c | \rc := Counter new.\rc count: 2.\rc decrement ; decrement.\rself assert: c count equals: 0',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.799+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsDecremented,			#protocol : #tests,			#sourceCode : 'testCountIsDecremented\r\r| c | \rc := Counter new.\rc count: 2.\rc decrement ; decrement.\rself assert: c count equals: 0',			#stamp : '',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.799+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #CounterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyCounter\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #CounterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'CounterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'CounterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CounterTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		},		#protocol : #tests	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.808+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #CounterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: #MyCounter',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #CounterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'CounterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteCounterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteCounterTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:08.907+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpCategoryRemoval {		#classCategoryName : #MyCounter,		#affectedPackageName : #MyCounter	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:58.705+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MyCounter,		#affectedPackageName : #MyCounter	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:27:58.706+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'count\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyCounter\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Counter,						#isMetaSide : false					},					#name : #count,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Counter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Counter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:28:13.732+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #'as yet unclassified',			#sourceCode : 'count \r^ count',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:28:13.735+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #'as yet unclassified',			#sourceCode : 'count \r^ count',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count \r^ count',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:28:33.332+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: AnInteger\r\rcount := AnInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:28:44.871+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: AnInteger\r\rcount := AnInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: anInteger\r\rcount := anInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:28',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:29:03.454+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #increment,			#protocol : #accessing,			#sourceCode : 'increment\r\rcount := count + 1',			#stamp : 'SebastianLorenzano 4/1/2025 11:29',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:29:11.969+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #decrement,			#protocol : #accessing,			#sourceCode : 'decrement\r\rcount := count - 1',			#stamp : 'SebastianLorenzano 4/1/2025 11:29',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:29:41.715+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #CounterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyCounter\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #CounterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'CounterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'CounterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CounterTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyCounter,			#package : #MyCounter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:30:56.817+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rc assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:30',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:30:56.821+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rc assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:30',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rc assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:30',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:31:33.293+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rc assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:30',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rself assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:31',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:31:51.86+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rself assert count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:31',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead \r\r| c |\rc := Counter new.\r\rc count: 15.\rself assert: c count equals: 15.',			#stamp : 'SebastianLorenzano 4/1/2025 11:31',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:32:23.239+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; increment ; increment.\rself assert: c count equals: 17.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:32:34.929+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; increment ; increment.\rself assert: c count equals: 17.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; decrement ; decrement.\rself assert: c count equals: 13.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:32:41.089+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsDecremented,			#protocol : #tests,			#sourceCode : 'testCountIsDecremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; decrement ; decrement.\rself assert: c count equals: 13.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:32:51.787+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; decrement ; decrement.\rself assert: c count equals: 13.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsIncremented,			#protocol : #tests,			#sourceCode : 'testCountIsIncremented\r\r| c |\rc := Counter new.\r\rc count: 15 ; increment ; increment.\rself assert: c count equals: 17.',			#stamp : 'SebastianLorenzano 4/1/2025 11:32',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:35:12.019+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:37:49.091+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testInitialize,			#protocol : #tests,			#sourceCode : 'testInitialize\r\r| c |\rc := Counter new.\rself assert: c count equals: 0.',			#stamp : 'SebastianLorenzano 4/1/2025 11:37',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:38:07.486+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\rcount := 0',			#stamp : 'SebastianLorenzano 4/1/2025 11:38',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:38:31.405+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\rcount := 0',			#stamp : 'SebastianLorenzano 4/1/2025 11:38',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #initialize,			#protocol : #accessing,			#sourceCode : 'initialize\r\rsuper initialize.\rcount := 0',			#stamp : 'SebastianLorenzano 4/1/2025 11:38',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:39:11.62+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5,			#protocol : #tests,			#sourceCode : 'testStartingAt5\r\r| c |\rc := Counter startingAt: 5.\rself assert: c count equals: 0.',			#stamp : 'SebastianLorenzano 4/1/2025 11:39',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:39:42.371+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #'startingAt:',			#protocol : #'as yet unclassified',			#sourceCode : 'startingAt: anInteger\r\r^ self new count: anInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:39',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:39:42.374+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #'startingAt:',			#protocol : #'as yet unclassified',			#sourceCode : 'startingAt: anInteger\r\r^ self new count: anInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:39',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #'startingAt:',			#protocol : #accessing,			#sourceCode : 'startingAt: anInteger\r\r^ self new count: anInteger',			#stamp : 'SebastianLorenzano 4/1/2025 11:39',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:40:16.512+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5,			#protocol : #tests,			#sourceCode : 'testStartingAt5\r\r| c |\rc := Counter startingAt: 5.\rself assert: c count equals: 0.',			#stamp : 'SebastianLorenzano 4/1/2025 11:39',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5,			#protocol : #tests,			#sourceCode : 'testStartingAt5\r\r| c |\rc := Counter startingAt: 5.\rself assert: c count equals: 5.',			#stamp : 'SebastianLorenzano 4/1/2025 11:40',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:40:56.281+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5Increment,			#protocol : #tests,			#sourceCode : 'testStartingAt5Increment\r\r| c |\rc := Counter startingAt: 5 ; increment.\rself assert: c count equals: 6.',			#stamp : 'SebastianLorenzano 4/1/2025 11:40',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:41:09.262+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5Increment,			#protocol : #tests,			#sourceCode : 'testStartingAt5Increment\r\r| c |\rc := Counter startingAt: 5 ; increment.\rself assert: c count equals: 6.',			#stamp : 'SebastianLorenzano 4/1/2025 11:40',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testStartingAt5Increment,			#protocol : #tests,			#sourceCode : 'testStartingAt5Increment\r\r| c |\rc := Counter startingAt: 5.\rc increment.\rself assert: c count equals: 6.',			#stamp : 'SebastianLorenzano 4/1/2025 11:41',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:41:53.372+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:43:28.804+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #accessing,			#sourceCode : 'printOn: aStream\r\r\tsuper printOn: aStream. "a Counter"\r\taStream nextPutAll: \' with Value: \', count printString.',			#stamp : 'SebastianLorenzano 4/1/2025 11:43',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:43:39.344+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #accessing,			#sourceCode : 'printOn: aStream\r\r\tsuper printOn: aStream. "a Counter"\r\taStream nextPutAll: \' with Value: \', count printString.',			#stamp : 'SebastianLorenzano 4/1/2025 11:43',			#package : #MyCounter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #accessing,			#sourceCode : 'printOn: aStream\r\r\tsuper printOn: aStream. "a Counter"\r\taStream nextPutAll: \' with Value: \', count printString.\r\taStream cr',			#stamp : 'SebastianLorenzano 4/1/2025 11:43',			#package : #MyCounter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:46:53.167+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T11:51:01.351+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:31:10.232+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MyTinyBlog,		#affectedPackageName : #MyTinyBlog	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:31:10.233+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'visible date title text category\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #TBPostS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #visible,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #date,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #title,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #text,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #category,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TBPostS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostS,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyTinyBlog,			#package : #MyTinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:31:32.92+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #'as yet unclassified',			#sourceCode : 'isVisible \r^ visible',			#stamp : 'SebastianLorenzano 4/1/2025 12:31',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:31:32.925+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #'as yet unclassified',			#sourceCode : 'isVisible \r^ visible',			#stamp : 'SebastianLorenzano 4/1/2025 12:31',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #testing,			#sourceCode : 'isVisible \r^ visible',			#stamp : 'SebastianLorenzano 4/1/2025 12:31',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:32:25.482+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isUnclassified,			#protocol : #testing,			#sourceCode : 'isUnclassified \r^ category equals: nil',			#stamp : 'SebastianLorenzano 4/1/2025 12:32',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T12:34:12.404+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #testing,			#sourceCode : 'initialize \r\rsuper initialize.\r\rvisible := false.\rdate := Date now.\rtitle := \'\'.\rtext := \'\'.\rcategory := \'\'.',			#stamp : 'SebastianLorenzano 4/1/2025 12:34',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:32:50.204+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#TBPostS))'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ],		#time : DateAndTime [ '2025-04-01T13:32:50.231+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isUnclassified,			#protocol : #testing,			#sourceCode : 'isUnclassified \r^ category equals: nil',			#stamp : 'SebastianLorenzano 4/1/2025 12:32',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2025-04-01T13:32:50.232+02:00' ],		#trigger : OmReference [ '66' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #testing,			#sourceCode : 'isVisible \r^ visible',			#stamp : 'SebastianLorenzano 4/1/2025 12:31',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2025-04-01T13:32:50.232+02:00' ],		#trigger : OmReference [ '66' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #testing,			#sourceCode : 'initialize \r\rsuper initialize.\r\rvisible := false.\rdate := Date now.\rtitle := \'\'.\rtext := \'\'.\rcategory := \'\'.',			#stamp : 'SebastianLorenzano 4/1/2025 12:34',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2025-04-01T13:32:50.232+02:00' ],		#trigger : OmReference [ '66' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'visible date title text category\'\r\tclassVariableNames: \'\'\r\tpackage: #MyTinyBlog',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #TBPostS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTBPostS,						#isMetaSide : false					},					#name : #visible,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTBPostS,						#isMetaSide : false					},					#name : #date,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTBPostS,						#isMetaSide : false					},					#name : #title,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTBPostS,						#isMetaSide : false					},					#name : #text,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTBPostS,						#isMetaSide : false					},					#name : #category,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteTBPostS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteTBPostS,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyTinyBlog,			#package : #MyTinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:33:26.012+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'title text category date visible\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #TBPostS,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #title,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #text,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #category,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #date,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#name : #visible,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TBPostS class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostS,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyTinyBlog,			#package : #MyTinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:37:13.638+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #title class: TBPostS classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #text class: TBPostS classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #category class: TBPostS classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #date class: TBPostS classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #visible class: TBPostS classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2025-04-01T13:37:13.65+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #title,			#protocol : #accessing,			#sourceCode : 'title\r\r\t^ title',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ],		#time : DateAndTime [ '2025-04-01T13:37:13.656+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'title:',			#protocol : #accessing,			#sourceCode : 'title: anObject\r\r\ttitle := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ],		#time : DateAndTime [ '2025-04-01T13:37:13.66+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #text,			#protocol : #accessing,			#sourceCode : 'text\r\r\t^ text',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ],		#time : DateAndTime [ '2025-04-01T13:37:13.663+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'text:',			#protocol : #accessing,			#sourceCode : 'text: anObject\r\r\ttext := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ],		#time : DateAndTime [ '2025-04-01T13:37:13.668+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #category,			#protocol : #accessing,			#sourceCode : 'category\r\r\t^ category',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ],		#time : DateAndTime [ '2025-04-01T13:37:13.671+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'category:',			#protocol : #accessing,			#sourceCode : 'category: anObject\r\r\tcategory := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ],		#time : DateAndTime [ '2025-04-01T13:37:13.674+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #date,			#protocol : #accessing,			#sourceCode : 'date\r\r\t^ date',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ],		#time : DateAndTime [ '2025-04-01T13:37:13.677+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'date:',			#protocol : #accessing,			#sourceCode : 'date: anObject\r\r\tdate := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ],		#time : DateAndTime [ '2025-04-01T13:37:13.681+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #visible,			#protocol : #accessing,			#sourceCode : 'visible\r\r\t^ visible',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ],		#time : DateAndTime [ '2025-04-01T13:37:13.684+02:00' ],		#trigger : OmReference [ '72' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'visible:',			#protocol : #accessing,			#sourceCode : 'visible: anObject\r\r\tvisible := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:37:50.11+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'visible:',			#protocol : #accessing,			#sourceCode : 'visible: anObject\r\r\tvisible := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'visible:',			#protocol : #accessing,			#sourceCode : 'visible: aBoolean\r\r\tvisible := aBoolean',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:38:01.734+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'title:',			#protocol : #accessing,			#sourceCode : 'title: anObject\r\r\ttitle := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'title:',			#protocol : #accessing,			#sourceCode : 'title: aString\r\r\ttitle := aString',			#stamp : 'SebastianLorenzano 4/1/2025 13:38',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:38:33.959+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'text:',			#protocol : #accessing,			#sourceCode : 'text: anObject\r\r\ttext := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'text:',			#protocol : #accessing,			#sourceCode : 'text: aString\r\r\ttext := aString',			#stamp : 'SebastianLorenzano 4/1/2025 13:38',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:38:45.408+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'date:',			#protocol : #accessing,			#sourceCode : 'date: anObject\r\r\tdate := anObject',			#stamp : 'SebastianLorenzano 4/1/2025 13:37',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #'date:',			#protocol : #accessing,			#sourceCode : 'date: aDate\r\r\tdate := aDate',			#stamp : 'SebastianLorenzano 4/1/2025 13:38',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:40:05.297+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #beVisible,			#protocol : #'as yet unclassified',			#sourceCode : 'beVisible \rvisible := true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:40',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:40:05.312+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #beVisible,			#protocol : #'as yet unclassified',			#sourceCode : 'beVisible \rvisible := true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:40',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #beVisible,			#protocol : #blinking,			#sourceCode : 'beVisible \rvisible := true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:40',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:40:19.733+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #notVisible,			#protocol : #blinking,			#sourceCode : 'notVisible\rvisible := false.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:40',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:41:51.593+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #switchVisible,			#protocol : #blinking,			#sourceCode : 'switchVisible\rvisible := visible not.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:41',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:43:39.046+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:43',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:44:11.178+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #unclassifiedTag,			#protocol : #blinking,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' \r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:44:24.386+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:43',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tself unclassifiedTag.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:45:23.989+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tself unclassifiedTag.\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tself unclassifiedTag\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:45',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T13:46:05.684+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #TBPostSTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #TBPostSTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TBPostSTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TBPostSTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TBPostSTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MyTinyBlog,			#package : #MyTinyBlog,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:00:22.341+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterTitle,			#protocol : #'as yet unclassified',			#sourceCode : 'testGetterAndSetterTitle\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:00',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:00:22.346+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterTitle,			#protocol : #'as yet unclassified',			#sourceCode : 'testGetterAndSetterTitle\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:00',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterTitle,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterTitle\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:00',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:00:52.455+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #unclassifiedTag,			#protocol : #blinking,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' \r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #unclassifiedTag,			#protocol : #'as yet unclassified',			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' \r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:00:52.494+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #unclassifiedTag,			#protocol : #blinking,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' \r',			#stamp : 'SebastianLorenzano 4/1/2025 13:44',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:01:06.348+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #'as yet unclassified',			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' ',			#stamp : 'SebastianLorenzano 4/1/2025 14:01',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:02:13.805+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tself unclassifiedTag\r',			#stamp : 'SebastianLorenzano 4/1/2025 13:45',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tTBPostS unclassifiedTag.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:02',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:07:50.933+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',				#traitCompositionSource : '{}'			},			#name : #'TBPostS class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'title text category date visible\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',					#superclassName : 'Object',					#traitCompositionSource : '{}'				},				#name : #TBPostS,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #title,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #text,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #category,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #date,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #visible,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #MyTinyBlog,				#package : #MyTinyBlog,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:07:54.219+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #'as yet unclassified',			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' ',			#stamp : 'SebastianLorenzano 4/1/2025 14:01',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #initialization,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' ',			#stamp : 'SebastianLorenzano 4/1/2025 14:01',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:11:47.544+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\t\r\tvisible := false.\r\tTBPostS unclassifiedTag.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:02',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #initialize,			#protocol : #blinking,			#sourceCode : 'initialize \r\r\tsuper initialize.\r\tself category: self class unclassifiedTag.\r\tself date: Date today.\r\tself notVisible.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:11',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:14:09.825+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterTitle,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterTitle\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:00',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterTitle,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterTitle\r\r| tb |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\'.\r\rself assert: tb title equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:14',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:14:29.16+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterText,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterText\r\r| tb |\r\rtb := TBPostS new.\r\rtb text: \'Pepe\'.\r\rself assert: tb text equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:14',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:16:36.612+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date now) addDays: 2].\r\rself assert: tb text equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:16',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:16:58.709+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date now) addDays: 2].\r\rself assert: tb text equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:16',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date today) addDays: 2].\r\rself assert: tb text equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:16',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:17:32.092+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date today) addDays: 2].\r\rself assert: tb text equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:16',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date today) addDays: 2].\r\rself assert: tb date equals: [ (Date today) addDays: 2].\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:17',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:20:07.386+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb |\r\rtb := TBPostS new.\rtb date: [ (Date today) addDays: 2].\r\rself assert: tb date equals: [ (Date today) addDays: 2].\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:17',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterDate,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterDate\r\r| tb dateValue |\r\rdateValue := (Date today) addDays: 2.\rtb := TBPostS new.\rtb date: dateValue.\r\rself assert: tb date equals: dateValue.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:20',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:21:18.775+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterCategory,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterCategory\r\r| tb |\r\rtb := TBPostS new.\r\rtb category: \'Pepe\'.\r\rself assert: tb category equals: \'Pepe\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:21',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:21:42.627+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterVisible,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterVisible\r\r| tb |\r\rtb := TBPostS new.\r\rtb visible: \'Visible\'.\r\rself assert: tb category equals: \'Visible\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:21',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:21:57.418+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterVisible,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterVisible\r\r| tb |\r\rtb := TBPostS new.\r\rtb visible: \'Visible\'.\r\rself assert: tb category equals: \'Visible\'.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:21',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterVisible,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterVisible\r\r| tb |\r\rtb := TBPostS new.\r\rtb visible: true.\r\rself assert: tb category equals: true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:21',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:22:06.579+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterVisible,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterVisible\r\r| tb |\r\rtb := TBPostS new.\r\rtb visible: true.\r\rself assert: tb category equals: true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:21',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testGetterAndSetterVisible,			#protocol : #tests,			#sourceCode : 'testGetterAndSetterVisible\r\r| tb |\r\rtb := TBPostS new.\r\rtb visible: true.\r\rself assert: tb visible equals: true.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:22',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:24:33.604+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testInitializing,			#protocol : #tests,			#sourceCode : 'testInitializing\r\r| tb |\r\rtb := TBPostS new.\r\rself assert: tb text equals: nil.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:24',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:25:05.096+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testInitializing,			#protocol : #tests,			#sourceCode : 'testInitializing\r\r| tb |\r\rtb := TBPostS new.\r\rself assert: tb text equals: nil.\r',			#stamp : 'SebastianLorenzano 4/1/2025 14:24',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testInitializing,			#protocol : #tests,			#sourceCode : 'testInitializing\r\r| tb |\r\rtb := TBPostS new.\r\rself assert: tb title equals: nil.\rself assert: tb text equals: nil.\rself assert: tb visible equals: false.\rself assert: tb category equals: \'Uncategori\'.',			#stamp : 'SebastianLorenzano 4/1/2025 14:25',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:25:22.674+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testInitializing,			#protocol : #tests,			#sourceCode : 'testInitializing\r\r| tb |\r\rtb := TBPostS new.\r\rself assert: tb title equals: nil.\rself assert: tb text equals: nil.\rself assert: tb visible equals: false.\rself assert: tb category equals: \'Uncategori\'.',			#stamp : 'SebastianLorenzano 4/1/2025 14:25',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testInitializing,			#protocol : #tests,			#sourceCode : 'testInitializing\r\r| tb |\r\rtb := TBPostS new.\r\rself assert: tb title equals: nil.\rself assert: tb text equals: nil.\rself assert: tb visible equals: false.\rself assert: tb category equals: \'Unclassified\'.',			#stamp : 'SebastianLorenzano 4/1/2025 14:25',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:26:14.157+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',				#traitCompositionSource : '{}'			},			#name : #'TBPostS class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'title text category date visible\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',					#superclassName : 'Object',					#traitCompositionSource : '{}'				},				#name : #TBPostS,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #title,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #text,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #category,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #date,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #visible,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #MyTinyBlog,				#package : #MyTinyBlog,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:26:27.071+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',				#traitCompositionSource : '{}'			},			#name : #'TBPostS class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'title text category date visible\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',					#superclassName : 'Object',					#traitCompositionSource : '{}'				},				#name : #TBPostS,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #title,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #text,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #category,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #date,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #visible,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #MyTinyBlog,				#package : #MyTinyBlog,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #'instance initialization'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:26:29.213+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpProtocolRemoval {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TBPostS class\r\tinstanceVariableNames: \'\'',				#traitCompositionSource : '{}'			},			#name : #'TBPostS class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Object subclass: #TBPostS\r\tinstanceVariableNames: \'title text category date visible\'\r\tclassVariableNames: \'\'\r\tpackage: \'MyTinyBlog\'',					#superclassName : 'Object',					#traitCompositionSource : '{}'				},				#name : #TBPostS,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #title,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #text,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #category,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #date,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #TBPostS,							#isMetaSide : false						},						#name : #visible,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #TBPostS,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #MyTinyBlog,				#package : #MyTinyBlog,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #initialization	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:26:29.218+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #initialization,			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' ',			#stamp : 'SebastianLorenzano 4/1/2025 14:01',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #unclassifiedTag,			#protocol : #'instance initialization',			#sourceCode : 'unclassifiedTag\r\t^ \'Unclassified\' ',			#stamp : 'SebastianLorenzano 4/1/2025 14:01',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:28:13.019+02:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #'title:text:',			#protocol : #'instance creation',			#sourceCode : 'title: aTitle text: aText\r\r\t^ self new\r\t\ttitle: aTitle;\r\t\ttext: aText;\r\t\tyourself\r\t\t\r\t\t',			#stamp : 'SebastianLorenzano 4/1/2025 14:28',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:29:20.575+02:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TBPostS class',				#isMetaSide : true			},			#name : #'title:text:category:',			#protocol : #'instance creation',			#sourceCode : 'title: aTitle text: aText category: aCategory\r\r\t^ (self title: aTitle text: aText)\r\t\t\tcategory: aCategory;\r\t\t\tyourself\r\t\t\r\t\t',			#stamp : 'SebastianLorenzano 4/1/2025 14:29',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:32:10.288+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #'as yet unclassified',			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself assert: tb equals: tb1 ',			#stamp : 'SebastianLorenzano 4/1/2025 14:32',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:32:10.302+02:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #'as yet unclassified',			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself assert: tb equals: tb1 ',			#stamp : 'SebastianLorenzano 4/1/2025 14:32',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #tests,			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself assert: tb equals: tb1 ',			#stamp : 'SebastianLorenzano 4/1/2025 14:32',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:33:08.398+02:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #tests,			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself assert: tb equals: tb1 ',			#stamp : 'SebastianLorenzano 4/1/2025 14:32',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #tests,			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text ',			#stamp : 'SebastianLorenzano 4/1/2025 14:33',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:33:10.528+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #tests,			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text ',			#stamp : 'SebastianLorenzano 4/1/2025 14:33',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleText,			#protocol : #tests,			#sourceCode : 'testClassTitleText\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text.',			#stamp : 'SebastianLorenzano 4/1/2025 14:33',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:33:49.352+02:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleTextCategory,			#protocol : #tests,			#sourceCode : 'testClassTitleTextCategory\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\' ; category: \'Pepe2\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\' category: \'Pepe2\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text.',			#stamp : 'SebastianLorenzano 4/1/2025 14:33',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:34:07.594+02:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleTextCategory,			#protocol : #tests,			#sourceCode : 'testClassTitleTextCategory\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\' ; category: \'Pepe2\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\' category: \'Pepe2\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text.',			#stamp : 'SebastianLorenzano 4/1/2025 14:33',			#package : #MyTinyBlog		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostSTest,				#isMetaSide : false			},			#name : #testClassTitleTextCategory,			#protocol : #tests,			#sourceCode : 'testClassTitleTextCategory\r\r| tb tb1 |\r\rtb := TBPostS new.\r\rtb title: \'Pepe\' ; text: \'Pepe1\' ; category: \'Pepe2\'.\r\rtb1 := TBPostS title: \'Pepe\' text: \'Pepe1\' category: \'Pepe2\'. \r\rself \r\tassert: tb title equals: tb1 title ;\r\tassert: tb text equals: tb1 text   ;\r\tassert: tb category equals: tb1 category.',			#stamp : 'SebastianLorenzano 4/1/2025 14:34',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:37:47.426+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:40:38.382+02:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isVisible,			#protocol : #accessing,			#sourceCode : 'isVisible \r\t^ visible ',			#stamp : 'SebastianLorenzano 4/1/2025 14:40',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:45:42.87+02:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TBPostS,				#isMetaSide : false			},			#name : #isUnclassified,			#protocol : #accessing,			#sourceCode : 'isUnclassified \r^  category =  self class unclassifiedTag',			#stamp : 'SebastianLorenzano 4/1/2025 14:45',			#package : #MyTinyBlog		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-04-01T14:46:27.393+02:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}