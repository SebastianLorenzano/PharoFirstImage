OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T11:31:01.559+02:00' ],		#prior : OmReference [ 'Pharo10-SNAPSHOT-64bit-28169ae.e6mxc0ro60mzd83o2rtrlppt8', '8370' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProfStef class',				#isMetaSide : true			},			#name : #goToNextLesson,			#protocol : #'as yet unclassified',			#sourceCode : 'goToNextLesson\r  self next',			#stamp : 'SebastianLorenzano 3/31/2025 11:31',			#package : #ProfStef-Core		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T11:32:10.15+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProfStef class',				#isMetaSide : true			},			#name : #goToNextLesson,			#protocol : #'as yet unclassified',			#sourceCode : 'goToNextLesson\r  self next',			#stamp : 'SebastianLorenzano 3/31/2025 11:31',			#package : #ProfStef-Core		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:41:14.815+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Counter,		#affectedPackageName : #Counter	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:41:14.819+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'count\'\r\tclassVariableNames: \'\'\r\tpackage: \'Counter\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Counter,						#isMetaSide : false					},					#name : #count,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Counter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Counter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Counter,			#package : #Counter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:41:55.954+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #'as yet unclassified',			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : 'SebastianLorenzano 3/31/2025 22:41',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:41:55.96+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #'as yet unclassified',			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : 'SebastianLorenzano 3/31/2025 22:41',			#package : #Counter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #count,			#protocol : #accessing,			#sourceCode : 'count\r"Returns count internal variable" \r^ count \r',			#stamp : 'SebastianLorenzano 3/31/2025 22:41',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:42:40.903+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #'count:',			#protocol : #accessing,			#sourceCode : 'count: anInteger\r"Sets count internal variable" \r\tcount := anInteger\r',			#stamp : 'SebastianLorenzano 3/31/2025 22:42',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:44:18.953+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #CounterTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Counter\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #CounterTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'CounterTest class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'CounterTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #CounterTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Counter,			#package : #Counter,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:45:27.067+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 7',			#stamp : 'SebastianLorenzano 3/31/2025 22:45',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:45:27.071+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #'as yet unclassified',			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 7',			#stamp : 'SebastianLorenzano 3/31/2025 22:45',			#package : #Counter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 7',			#stamp : 'SebastianLorenzano 3/31/2025 22:45',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:45:50.637+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 7',			#stamp : 'SebastianLorenzano 3/31/2025 22:45',			#package : #Counter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testCountIsSetAndRead,			#protocol : #tests,			#sourceCode : 'testCountIsSetAndRead\r\r| c | \rc := Counter new.\rc count: 15.\rself assert: c count equals: 15',			#stamp : 'SebastianLorenzano 3/31/2025 22:45',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:46:02.011+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\selor\\Documents\\Pharo\\images\\Pharo 10.0 - 64bit Mooc\\Pharo 10.0 - 64bit Mooc.image'	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:47:24.484+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testIncrement,			#protocol : #tests,			#sourceCode : 'testIncrement\r\r| c | \rc := Counter new.\rc count: 15.\rc count increment ; increment.\rself assert: c count equals: 117',			#stamp : 'SebastianLorenzano 3/31/2025 22:47',			#package : #Counter		}	}}OmEntry {	#tags : {		#author : 'SebastianLorenzano',		#time : DateAndTime [ '2025-03-31T22:47:43.43+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testIncrement,			#protocol : #tests,			#sourceCode : 'testIncrement\r\r| c | \rc := Counter new.\rc count: 15.\rc count increment ; increment.\rself assert: c count equals: 117',			#stamp : 'SebastianLorenzano 3/31/2025 22:47',			#package : #Counter		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CounterTest,				#isMetaSide : false			},			#name : #testIncrement,			#protocol : #tests,			#sourceCode : 'testIncrement\r\r| c | \rc := Counter new.\rc count: 15.\rc increment ; increment.\rself assert: c count equals: 117',			#stamp : 'SebastianLorenzano 3/31/2025 22:47',			#package : #Counter		}	}}